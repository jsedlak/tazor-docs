@layout DocLayout
@page "/docs/forms/combobox"

<PageTitle>ComboBox - Tazor Docs</PageTitle>
<PageHead>
    <Title>ComboBox</Title>
</PageHead>

<p class="leading-loose mb-4">Development on this component has not yet started. If you are interested, please consider contributing.</p>

<p><a class="font-semibold" href="https://github.com/jsedlak/tazor/issues/2" target="_blank">GitHub Issue @HeroIcons.Link("inline-block", "w-5 h-5")</a></p>

<ComboBox TItem="City" MultiSelect OnSearch=@OnHandleSearch>
    <ResultTemplate>
        <div class="flex items-center gap-4">
            <span>@HeroIcons.BuildingOffice()</span>
            <span>@context.Name</span>
        </div>
    </ResultTemplate>
    <ViewTemplate>
        <span class="inline-block p-1 text-sm bg-gray-200 dark:bg-gray-700 rounded">@context.Name</span>
    </ViewTemplate>
</ComboBox>
@code {
    private IEnumerable<City> _cities = Enumerable.Empty<City>();

    private Task<IEnumerable<City>> OnHandleSearch(string input)
    {
        return Task.FromResult(_cities);
    }

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _cities = [
            new City { Name = "New York" },
            new City { Name = "Los Angeles" },
            new City { Name = "Chicago" },
            new City { Name = "Houston" },
            new City { Name = "Phoenix" },
            new City { Name = "Philadelphia" },
            new City { Name = "San Antonio" },
            new City { Name = "San Diego" },
            new City { Name = "Dallas" },
            new City { Name = "San Jose" },
            new City { Name = "Austin" },
            new City { Name = "Jacksonville" },
            new City { Name = "Fort Worth" },
            new City { Name = "Columbus" },
            new City { Name = "San Francisco" },
        ];
    }

    private class City 
    {
       
       public string Name { get; set; }
   }
}
