@page "/theming"
@using Newtonsoft.Json
@inject IThemeManager ThemeManager
<PageTitle>Theming - Tazor Docs</PageTitle>

<PageHead Title="Theming" />

<p class="leading-loose mb-4">Theming is central to Tazor and is the single driver of CSS Class 
    naming across every component. Without a theme, there are no styles.</p>

<SubHeader>Themes</SubHeader>

<div class="grid grid-cols-6 gap-4">
    <div class="">
        <TreeView Items=@_items SelectedItemsChanged=@HandleThemeSelected />
    </div>
    <div class="col-span-5">
        @if(!string.IsNullOrWhiteSpace(_code))
        {
            <CodeBlock Code=@_code Title=@_title />
        }
    </div>
</div>
@code {
    private IEnumerable<ITreeItem> _items = Enumerable.Empty<ITreeItem>();

    private string? _code, _title;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        _items = ThemeManager.Themes.Select(m => new TreeItem
        {
            Title = m.Name,
            Icon = HeroIcons.PaintBrush("", "w-4 h-4")
        });
    }

    private async Task HandleThemeSelected(IEnumerable<ITreeItem> items)
    {
        if(!items.Any())
        {
            _title = _code = null;
            return;
        }

        var first = items.First();
        var theme = ThemeManager.Themes.First(m => m.Name == first.Title);

        _title = $"{first.Title}.json";
        _code = JsonConvert.SerializeObject(theme, new JsonSerializerSettings() { Formatting = Formatting.Indented });
    }
}